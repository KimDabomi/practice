{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst CounterSlice = createSlice({\n  name: 'CounterSlice',\n  // 이 모듈이 관리하고자하는 상태값들을 명시\n  initialState: {\n    number: 0,\n    color: '#000'\n  },\n  // 상태값을 갱신하기 위한 함수들을 구현\n  // 컴포넌트에서 이 함수들을 호출할 때 전달되는 파라미터는 action.payload로 전달된다.\n  // initialState와 동일한 구조의 JSON을 리턴한다.\n  reducers: {\n    plus: (state, action) => {\n      const numberValue = state.number + action.payload;\n      let colorValue = '#000';\n      if (numberValue > 0) {\n        colorValue = '#2f77eb';\n      } else if (numberValue < 0) {\n        colorValue = '#f60';\n      }\n      return {\n        number: numberValue,\n        color: colorValue\n      };\n    },\n    minus: (state, action) => {\n      const numberValue = state.number + action.payload;\n      let colorValue = '#000';\n      if (numberValue > 0) {\n        colorValue = '#2f77eb';\n      } else if (numberValue < 0) {\n        colorValue = '#f60';\n      }\n      return {\n        number: numberValue,\n        color: colorValue\n      };\n    }\n  }\n});\n// 액션함수들 내보내기\nexport const {\n  plus,\n  minus\n} = CounterSlice.actions;\n// 리듀서 객체 내보내기\nexport default CounterSlice.reducer;","map":{"version":3,"names":["createSlice","CounterSlice","name","initialState","number","color","reducers","plus","state","action","numberValue","payload","colorValue","minus","actions","reducer"],"sources":["C:/Users/cdabo/react/13-redux/src/slices/CounterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst CounterSlice = createSlice({\r\n    name: 'CounterSlice',\r\n    // 이 모듈이 관리하고자하는 상태값들을 명시\r\n    initialState: {\r\n        number: 0,\r\n        color: '#000'\r\n    },\r\n    // 상태값을 갱신하기 위한 함수들을 구현\r\n    // 컴포넌트에서 이 함수들을 호출할 때 전달되는 파라미터는 action.payload로 전달된다.\r\n    // initialState와 동일한 구조의 JSON을 리턴한다.\r\n    reducers: {\r\n        plus: (state, action) => {\r\n            const numberValue = state.number + action.payload;\r\n            let colorValue = '#000';\r\n\r\n            if (numberValue > 0) {\r\n                colorValue = '#2f77eb';\r\n            } else if (numberValue < 0) {\r\n                colorValue = '#f60'\r\n            }\r\n            return {\r\n                number: numberValue,\r\n                color: colorValue\r\n            };\r\n        },\r\n        minus: (state, action) => {\r\n            const numberValue = state.number + action.payload;\r\n            let colorValue = '#000';\r\n\r\n            if (numberValue > 0) {\r\n                colorValue = '#2f77eb';\r\n            } else if (numberValue < 0) {\r\n                colorValue = '#f60'\r\n            }\r\n            return {\r\n                number: numberValue,\r\n                color: colorValue\r\n            };\r\n        }\r\n    }\r\n});\r\n// 액션함수들 내보내기\r\nexport const { plus, minus } = CounterSlice.actions;\r\n// 리듀서 객체 내보내기\r\nexport default CounterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,cAAc;EACpB;EACAC,YAAY,EAAE;IACVC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACX,CAAC;EACD;EACA;EACA;EACAC,QAAQ,EAAE;IACNC,IAAI,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrB,MAAMC,WAAW,GAAGF,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACE,OAAO;MACjD,IAAIC,UAAU,GAAG,MAAM;MAEvB,IAAIF,WAAW,GAAG,CAAC,EAAE;QACjBE,UAAU,GAAG,SAAS;MAC1B,CAAC,MAAM,IAAIF,WAAW,GAAG,CAAC,EAAE;QACxBE,UAAU,GAAG,MAAM;MACvB;MACA,OAAO;QACHR,MAAM,EAAEM,WAAW;QACnBL,KAAK,EAAEO;MACX,CAAC;IACL,CAAC;IACDC,KAAK,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtB,MAAMC,WAAW,GAAGF,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACE,OAAO;MACjD,IAAIC,UAAU,GAAG,MAAM;MAEvB,IAAIF,WAAW,GAAG,CAAC,EAAE;QACjBE,UAAU,GAAG,SAAS;MAC1B,CAAC,MAAM,IAAIF,WAAW,GAAG,CAAC,EAAE;QACxBE,UAAU,GAAG,MAAM;MACvB;MACA,OAAO;QACHR,MAAM,EAAEM,WAAW;QACnBL,KAAK,EAAEO;MACX,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;AACF;AACA,OAAO,MAAM;EAAEL,IAAI;EAAEM;AAAM,CAAC,GAAGZ,YAAY,CAACa,OAAO;AACnD;AACA,eAAeb,YAAY,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}