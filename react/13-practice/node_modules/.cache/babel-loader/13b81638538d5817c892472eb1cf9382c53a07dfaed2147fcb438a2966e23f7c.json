{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\13-redux\\\\src\\\\pages\\\\ImageSearch.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useQueryString } from '../hooks/useQueryString';\nimport Spinner from '../components/Spinner';\nimport ErrorView from '../components/ErrorView';\nimport SearchForm from '../components/SearchForm';\nimport ImageList from '../components/ImageList';\nimport ImageView from '../components/ImageView';\n\n// 상태값을 로드하기 위한 hook과 action 함수를 dispatch할 hook 참조\nimport { useSelector, useDispatch } from 'react-redux';\n// 에러정보를 표시하기 위한 컴포넌트\nimport { getKakaoSearch } from '../slices/ImageSearchSlice';\nimport dayjs from 'dayjs';\n// 스크롤이 맨 끝에 도착했음을 감지하기 위한 컴포넌트\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSearch = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // QueryString에서 query라는 이름의 값을 추출\n  const {\n    query\n  } = useQueryString();\n\n  // hook을 통해 slice가 관리하는 상태값 가져오기\n  const {\n    data,\n    loading,\n    error\n  } = useSelector(state => state.ImageSearchSlice);\n\n  // dispatch 함수 생성\n  const dispatch = useDispatch();\n\n  // 무한 스크롤 \n  const [isEnd, inView] = useInView();\n\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  // 페이지 번호\n  const page = useRef(1);\n\n  // 검색어가 전달되었을 경우의 hook\n  useEffect(() => {\n    // 검색어가 존재한다면 리덕스를 통한 ajax 데이터 요청\n    if (query) {\n      // 검색어가 변경되었다는 것은 새로운 검색 결과를 의미하므로 페이지 번호를 1로 리셋한다.\n      page.current = 1;\n\n      // 두 개 이상의 파라미터를 사용하여 액션함수를 디스패치 해야 할 경우 파라미터를 json으로 묶는다.\n      dispatch(getKakaoSearch({\n        query: query,\n        page: page.current\n      }));\n      // 신규 검색이므로 스크롤바의 위치를 맨 위로 강제 이동\n      window.scrollTo(0, 0);\n    }\n  }, [query]);\n\n  // 사용자가 마지막 요소를 보고 있고, 로딩중이 아니라면\n  useEffect(() => {\n    var _data$meta;\n    if (!(data !== null && data !== void 0 && (_data$meta = data.meta) !== null && _data$meta !== void 0 && _data$meta.isEnd) && inView && !loading) {\n      console.log('스크롤이 맨 끝에 도착함');\n\n      // 페이지 번호를 1 증가시킨다.\n      page.current++;\n\n      // 추가검색결과를 요청하기 위해 액션함수를 디스패치한다.\n      dispatch(getKakaoSearch({\n        query: query,\n        page: page.current\n      }));\n      // 페이지 번호를 QueryString으로 기록한다.\n      navigate(`${window.location.pathname}?query=${query}&page=${page.current}`);\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(ErrorView, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : query && data && /*#__PURE__*/_jsxDEV(ImageList, {\n      children: data.documents.map((_ref, i) => {\n        let {\n          doc_url,\n          image_url,\n          thumbnail_url,\n          display_sitename,\n          collection,\n          width,\n          height,\n          datetime\n        } = _ref;\n        return (\n          /*#__PURE__*/\n          // ajax가 로딩중이 아니고 출력할 데이터 중에서 맨 마지막 원소라면\n          _jsxDEV(\"li\", {\n            className: \"list-item\",\n            ...(!(data !== null && data !== void 0 && data.meta.isEnd) && !loading && data.documents.length - 1 === i ? {\n              ref: isEnd\n            } : {}),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"list-item-link\",\n              href: doc_url,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thumbnail\",\n                children: /*#__PURE__*/_jsxDEV(ImageView, {\n                  src: thumbnail_url,\n                  alt: display_sitename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: display_sitename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: collection\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\uC774\\uBBF8\\uC9C0 \\uD06C\\uAE30: \", width, \"x\", height]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: dayjs(datetime).format('YYYY-MM-DD hh:mm')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}, \"RjZr+jZnZKSSV4yKMLMF9wh7zqc=\", false, function () {\n  return [useQueryString, useSelector, useDispatch, useInView, useNavigate];\n})), \"RjZr+jZnZKSSV4yKMLMF9wh7zqc=\", false, function () {\n  return [useQueryString, useSelector, useDispatch, useInView, useNavigate];\n});\n_c2 = ImageSearch;\nexport default ImageSearch;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageSearch$memo\");\n$RefreshReg$(_c2, \"ImageSearch\");","map":{"version":3,"names":["React","memo","useEffect","useRef","useNavigate","useQueryString","Spinner","ErrorView","SearchForm","ImageList","ImageView","useSelector","useDispatch","getKakaoSearch","dayjs","useInView","ImageSearch","query","data","loading","error","state","ImageSearchSlice","dispatch","isEnd","inView","navigate","page","current","window","scrollTo","meta","console","log","location","pathname","documents","map","i","doc_url","image_url","thumbnail_url","display_sitename","collection","width","height","datetime","length","ref","format"],"sources":["C:/Users/cdabo/react/13-redux/src/pages/ImageSearch.js"],"sourcesContent":["import React,{memo,useEffect,useRef} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useQueryString} from '../hooks/useQueryString';\r\nimport Spinner from '../components/Spinner';\r\nimport ErrorView from '../components/ErrorView';\r\nimport SearchForm from '../components/SearchForm';\r\nimport ImageList from '../components/ImageList';\r\nimport ImageView from '../components/ImageView';\r\n\r\n// 상태값을 로드하기 위한 hook과 action 함수를 dispatch할 hook 참조\r\nimport { useSelector,useDispatch } from 'react-redux';\r\n// 에러정보를 표시하기 위한 컴포넌트\r\nimport {getKakaoSearch} from '../slices/ImageSearchSlice';\r\nimport dayjs from 'dayjs';\r\n// 스크롤이 맨 끝에 도착했음을 감지하기 위한 컴포넌트\r\nimport {useInView} from 'react-intersection-observer';\r\n\r\nconst ImageSearch = memo(() => {\r\n    // QueryString에서 query라는 이름의 값을 추출\r\n    const {query} = useQueryString();\r\n\r\n    // hook을 통해 slice가 관리하는 상태값 가져오기\r\n    const {data,loading,error} = useSelector((state) => state.ImageSearchSlice);\r\n\r\n    // dispatch 함수 생성\r\n    const dispatch = useDispatch();\r\n\r\n    // 무한 스크롤 \r\n    const [isEnd,inView] = useInView();\r\n\r\n    // 페이지 이동\r\n    const navigate = useNavigate();\r\n\r\n    // 페이지 번호\r\n    const page = useRef(1);\r\n\r\n    // 검색어가 전달되었을 경우의 hook\r\n    useEffect(() => {\r\n        // 검색어가 존재한다면 리덕스를 통한 ajax 데이터 요청\r\n        if (query) {\r\n            // 검색어가 변경되었다는 것은 새로운 검색 결과를 의미하므로 페이지 번호를 1로 리셋한다.\r\n            page.current = 1;\r\n            \r\n            // 두 개 이상의 파라미터를 사용하여 액션함수를 디스패치 해야 할 경우 파라미터를 json으로 묶는다.\r\n            dispatch(getKakaoSearch({\r\n                query: query,\r\n                page: page.current\r\n            }));\r\n            // 신규 검색이므로 스크롤바의 위치를 맨 위로 강제 이동\r\n            window.scrollTo(0,0);\r\n        }\r\n    },[query]);\r\n    \r\n    // 사용자가 마지막 요소를 보고 있고, 로딩중이 아니라면\r\n    useEffect(() => {\r\n        if (!data?.meta?.isEnd && inView && !loading) {\r\n            console.log('스크롤이 맨 끝에 도착함');\r\n\r\n            // 페이지 번호를 1 증가시킨다.\r\n            page.current++;\r\n\r\n            // 추가검색결과를 요청하기 위해 액션함수를 디스패치한다.\r\n            dispatch(getKakaoSearch({\r\n                query: query,\r\n                page: page.current\r\n            }));\r\n            // 페이지 번호를 QueryString으로 기록한다.\r\n            navigate(`${window.location.pathname}?query=${query}&page=${page.current}`);\r\n        }\r\n    },[inView]);\r\n    \r\n    return (\r\n        <div>\r\n            <Spinner loading={loading} />\r\n            <SearchForm />\r\n            {error ? (\r\n                <ErrorView error={error} />\r\n            ) : (\r\n                (query && data) && (\r\n                    <ImageList>\r\n                        {data.documents.map(({doc_url,image_url,thumbnail_url,display_sitename,collection,width,height,datetime},i) => {\r\n                            return (\r\n                                // ajax가 로딩중이 아니고 출력할 데이터 중에서 맨 마지막 원소라면\r\n                                <li className=\"list-item\" key={i} {...(!data?.meta.isEnd && !loading && data.documents.length-1 === i) ? {ref: isEnd} : {}}>\r\n                                    <a className='list-item-link' href={doc_url} target='_blank' rel='noreferrer'>\r\n                                        <div className='thumbnail'>\r\n                                            <ImageView src={thumbnail_url} alt={display_sitename} />\r\n                                        </div>\r\n                                        <div className='content'>\r\n                                            <h3>{display_sitename}</h3>\r\n                                            <ul>\r\n                                                <li>{collection}</li>\r\n                                                <li>이미지 크기: {width}x{height}</li>\r\n                                                <li>{dayjs(datetime).format('YYYY-MM-DD hh:mm')}</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ImageList>\r\n            ))}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ImageSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}