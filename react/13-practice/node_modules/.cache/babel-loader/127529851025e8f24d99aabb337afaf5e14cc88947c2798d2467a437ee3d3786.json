{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\13-redux\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useQueryString } from '../hooks/useQueryString';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n    background-color: #fff;\n    display: flex;\n    padding: 5px 10px;\n    margin: 0;\n    \n    input,button {\n        display: block;\n        margin-right: 5px;\n        font-size: 16px;\n        padding: 0 10px;\n        height: 30px;\n    }\n    input {\n        flex: 1;\n    }\n    button {\n        width: 70px;\n        flex: none;\n    }\n`;\n_c = Form;\nconst SearchForm = /*#__PURE__*/_s( /*#__PURE__*/memo(_c2 = _s(() => {\n  _s();\n  // 페이지 이동을 위한 기능 생성\n  const navigate = useNavigate();\n\n  // QueryString에서 query라는 이름의 값을 추출\n  const {\n    query\n  } = useQueryString();\n\n  // 입력 요소에 연결할 참조변수\n  const searchInput = useRef();\n\n  // 검색폼 전송 이벤트\n  const onSearchSubmit = useCallback(e => {\n    e.preventDefault();\n    navigate(`${window.location.pathname}?query=${e.target.query.value}&page=${page.current}`);\n  }, [navigate]);\n\n  // queyrstring으로 전달된 query 값이 변경된 경우\n  React.useEffect(() => {\n    // 값이 존재한다면 입력요소의 value 값으로 설정\n    if (query) {\n      searchInput.current.value = query;\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        name: \"query\",\n        defaultValue: query,\n        ref: searchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}, \"nmcyxoz62lS0FtYZKtNSBNXsiP8=\", false, function () {\n  return [useNavigate, useQueryString];\n})), \"nmcyxoz62lS0FtYZKtNSBNXsiP8=\", false, function () {\n  return [useNavigate, useQueryString];\n});\n_c3 = SearchForm;\nexport default SearchForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"SearchForm$memo\");\n$RefreshReg$(_c3, \"SearchForm\");","map":{"version":3,"names":["React","memo","useRef","useCallback","styled","useNavigate","useQueryString","Form","form","SearchForm","navigate","query","searchInput","onSearchSubmit","e","preventDefault","window","location","pathname","target","value","page","current","useEffect"],"sources":["C:/Users/cdabo/react/13-redux/src/components/SearchForm.js"],"sourcesContent":["import React,{memo,useRef,useCallback} from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useQueryString} from '../hooks/useQueryString';\r\n\r\nconst Form = styled.form`\r\n    background-color: #fff;\r\n    display: flex;\r\n    padding: 5px 10px;\r\n    margin: 0;\r\n    \r\n    input,button {\r\n        display: block;\r\n        margin-right: 5px;\r\n        font-size: 16px;\r\n        padding: 0 10px;\r\n        height: 30px;\r\n    }\r\n    input {\r\n        flex: 1;\r\n    }\r\n    button {\r\n        width: 70px;\r\n        flex: none;\r\n    }\r\n`;\r\n\r\nconst SearchForm = memo(() => {\r\n    // 페이지 이동을 위한 기능 생성\r\n    const navigate = useNavigate();\r\n    \r\n    // QueryString에서 query라는 이름의 값을 추출\r\n    const {query} = useQueryString();\r\n\r\n    // 입력 요소에 연결할 참조변수\r\n    const searchInput = useRef();\r\n\r\n    // 검색폼 전송 이벤트\r\n    const onSearchSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        navigate(`${window.location.pathname}?query=${e.target.query.value}&page=${page.current}`);\r\n    },[navigate]);\r\n\r\n    // queyrstring으로 전달된 query 값이 변경된 경우\r\n    React.useEffect(() => {\r\n        // 값이 존재한다면 입력요소의 value 값으로 설정\r\n        if (query) {\r\n            searchInput.current.value = query;\r\n        }\r\n    },[query]);\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSearchSubmit}>\r\n                <input type='search' name='query' defaultValue={query} ref={searchInput} />\r\n                <button type='submit'>검색</button>\r\n            </Form>\r\n            <hr />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SearchForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,IAAI,EAACC,MAAM,EAACC,WAAW,QAAO,OAAO;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,cAAc,QAAO,yBAAyB;AAAC;AAEvD,MAAMC,IAAI,GAAGH,MAAM,CAACI,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KApBID,IAAI;AAsBV,MAAME,UAAU,iCAAGR,IAAI,UAAC,MAAM;EAAA;EAC1B;EACA,MAAMS,QAAQ,GAAGL,WAAW,EAAE;;EAE9B;EACA,MAAM;IAACM;EAAK,CAAC,GAAGL,cAAc,EAAE;;EAEhC;EACA,MAAMM,WAAW,GAAGV,MAAM,EAAE;;EAE5B;EACA,MAAMW,cAAc,GAAGV,WAAW,CAACW,CAAC,IAAI;IACpCA,CAAC,CAACC,cAAc,EAAE;IAClBL,QAAQ,CAAE,GAAEM,MAAM,CAACC,QAAQ,CAACC,QAAS,UAASJ,CAAC,CAACK,MAAM,CAACR,KAAK,CAACS,KAAM,SAAQC,IAAI,CAACC,OAAQ,EAAC,CAAC;EAC9F,CAAC,EAAC,CAACZ,QAAQ,CAAC,CAAC;;EAEb;EACAV,KAAK,CAACuB,SAAS,CAAC,MAAM;IAClB;IACA,IAAIZ,KAAK,EAAE;MACPC,WAAW,CAACU,OAAO,CAACF,KAAK,GAAGT,KAAK;IACrC;EACJ,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAEV,oBACI;IAAA,wBACI,QAAC,IAAI;MAAC,QAAQ,EAAEE,cAAe;MAAA,wBAC3B;QAAO,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,OAAO;QAAC,YAAY,EAAEF,KAAM;QAAC,GAAG,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3E;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,eACP;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;EAAA,QA/BoBP,WAAW,EAGZC,cAAc;AAAA,GA4BhC;EAAA,QA/BmBD,WAAW,EAGZC,cAAc;AAAA,EA4BhC;AAAC,MAjCGG,UAAU;AAmChB,eAAeA,UAAU;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}