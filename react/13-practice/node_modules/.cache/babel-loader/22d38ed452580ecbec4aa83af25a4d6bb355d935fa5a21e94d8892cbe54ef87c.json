{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\13-redux\\\\src\\\\pages\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect } from 'react';\nimport Spinner from '../components/Spinner';\nimport NewsList from '../components/NewsList';\nimport ErrorView from '../components/ErrorView';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getList } from '../slices/NewsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // hook을 통해 slice가 관리하는 상태값 가져오기\n  const {\n    data: news,\n    loading,\n    error\n  } = useSelector(state => state.NewsSlice);\n\n  // dispatch 함수 생성\n  const dispatch = useDispatch();\n\n  // 컴포넌트가 마운트되면 데이터 조회를 위한 액션함수를 디스패치함\n  useEffect(() => {\n    dispatch(getList());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(ErrorView, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : news && /*#__PURE__*/_jsxDEV(NewsList, {\n      news: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}, \"y6KaJ6cKni/K3ZrGdAYNbGKDcbg=\", false, function () {\n  return [useSelector, useDispatch];\n})), \"y6KaJ6cKni/K3ZrGdAYNbGKDcbg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = News;\nexport default News;\nvar _c, _c2;\n$RefreshReg$(_c, \"News$memo\");\n$RefreshReg$(_c2, \"News\");","map":{"version":3,"names":["React","memo","useEffect","Spinner","NewsList","ErrorView","useSelector","useDispatch","getList","News","data","news","loading","error","state","NewsSlice","dispatch"],"sources":["C:/Users/cdabo/react/13-redux/src/pages/News.js"],"sourcesContent":["import React,{memo,useEffect} from 'react';\r\nimport Spinner from '../components/Spinner';\r\nimport NewsList from '../components/NewsList';\r\nimport ErrorView from '../components/ErrorView';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {getList} from '../slices/NewsSlice';\r\n\r\nconst News = memo(() => {\r\n    // hook을 통해 slice가 관리하는 상태값 가져오기\r\n    const {data:news,loading,error} = useSelector((state) => state.NewsSlice);\r\n\r\n    // dispatch 함수 생성\r\n    const dispatch = useDispatch();\r\n\r\n    // 컴포넌트가 마운트되면 데이터 조회를 위한 액션함수를 디스패치함\r\n    useEffect(() => {\r\n        dispatch(getList());\r\n    },[dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Spinner loading={loading} />\r\n            {error ? (\r\n                <ErrorView error={error} />\r\n            ) : (\r\n                news && (<NewsList news={data} />)\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default News;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,IAAI,EAACC,SAAS,QAAO,OAAO;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAAQC,OAAO,QAAO,qBAAqB;AAAC;AAE5C,MAAMC,IAAI,iCAAGR,IAAI,SAAC,MAAM;EAAA;EACpB;EACA,MAAM;IAACS,IAAI,EAACC,IAAI;IAACC,OAAO;IAACC;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;;EAEzE;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;EACAL,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACR,OAAO,EAAE,CAAC;EACvB,CAAC,EAAC,CAACQ,QAAQ,CAAC,CAAC;EAEb,oBACI;IAAA,wBACI,QAAC,OAAO;MAAC,OAAO,EAAEJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,EAC5BC,KAAK,gBACF,QAAC,SAAS;MAAC,KAAK,EAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,GAE3BF,IAAI,iBAAK,QAAC,QAAQ;MAAC,IAAI,EAAED;IAAK;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;EAAA,QApBqCJ,WAAW,EAG5BC,WAAW;AAAA,GAiB9B;EAAA,QApBoCD,WAAW,EAG5BC,WAAW;AAAA,EAiB9B;AAAC,MAtBGE,IAAI;AAwBV,eAAeA,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}