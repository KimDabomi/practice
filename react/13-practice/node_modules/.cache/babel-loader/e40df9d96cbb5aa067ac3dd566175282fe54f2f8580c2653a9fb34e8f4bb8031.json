{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\13-redux\\\\src\\\\pages\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport React, { memo } from 'react';\n// 상태값을 로드하기 위한 hook과 action 함수를 dispatch할 hook 참조\nimport { useSelector, useDispatch } from 'react-redux';\n// slice에 정의된 액션함수들 참조\nimport { plus, minus } from '../slices/CounterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // hook을 통해 slice가 관리하는 상태값 가져오기\n  const {\n    number,\n    color\n  } = useSelector(state => state.CounterSlice);\n\n  // dispatch함수 생성\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        dispatch(plus(5));\n      },\n      children: \"+5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: color,\n        margin: '10px',\n        width: '50px',\n        textAlign: 'center'\n      },\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        dispatch(minus(3));\n      },\n      children: \"-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}, \"bXtbGdiZ3AsKwOVa4C5w9Rr8hx0=\", false, function () {\n  return [useSelector, useDispatch];\n})), \"bXtbGdiZ3AsKwOVa4C5w9Rr8hx0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = Counter;\nexport default Counter;\nvar _c, _c2;\n$RefreshReg$(_c, \"Counter$memo\");\n$RefreshReg$(_c2, \"Counter\");","map":{"version":3,"names":["React","memo","useSelector","useDispatch","plus","minus","Counter","number","color","state","CounterSlice","dispatch","display","e","margin","width","textAlign"],"sources":["C:/Users/cdabo/react/13-redux/src/pages/Counter.js"],"sourcesContent":["import React,{memo} from 'react';\r\n// 상태값을 로드하기 위한 hook과 action 함수를 dispatch할 hook 참조\r\nimport { useSelector,useDispatch } from 'react-redux';\r\n// slice에 정의된 액션함수들 참조\r\nimport {plus,minus} from '../slices/CounterSlice';\r\n\r\nconst Counter = memo(() => {\r\n    // hook을 통해 slice가 관리하는 상태값 가져오기\r\n    const {number,color} = useSelector((state) => state.CounterSlice);\r\n\r\n    // dispatch함수 생성\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div style={{display:'flex'}}>\r\n            <button onClick={e => {\r\n                dispatch(plus(5));\r\n            }}>+5</button>\r\n            <h2 style={{\r\n                color: color,\r\n                margin: '10px',\r\n                width: '50px',\r\n                textAlign: 'center'\r\n            }}>{number}</h2>\r\n            <button onClick={e => {\r\n                dispatch(minus(3));\r\n            }}>-3</button>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,IAAI,QAAO,OAAO;AAChC;AACA,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD;AACA,SAAQC,IAAI,EAACC,KAAK,QAAO,wBAAwB;AAAC;AAElD,MAAMC,OAAO,iCAAGL,IAAI,SAAC,MAAM;EAAA;EACvB;EACA,MAAM;IAACM,MAAM;IAACC;EAAK,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;;EAEjE;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9B,oBACI;IAAK,KAAK,EAAE;MAACS,OAAO,EAAC;IAAM,CAAE;IAAA,wBACzB;MAAQ,OAAO,EAAEC,CAAC,IAAI;QAClBF,QAAQ,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;MACrB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eACd;MAAI,KAAK,EAAE;QACPI,KAAK,EAAEA,KAAK;QACZM,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE;MACf,CAAE;MAAA,UAAET;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAQ,OAAO,EAAEM,CAAC,IAAI;QAClBF,QAAQ,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;MACtB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEd,CAAC;EAAA,QArB0BH,WAAW,EAGjBC,WAAW;AAAA,GAkB9B;EAAA,QArByBD,WAAW,EAGjBC,WAAW;AAAA,EAkB9B;AAAC,MAvBGG,OAAO;AAyBb,eAAeA,OAAO;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}