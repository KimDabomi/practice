{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMedia = exports.getMediaShorthands = exports.getMixin = exports.mediaRules = exports.getNextMedia = exports.getSmallestMedia = exports.mediaTemplate = exports.ruleTemplate = exports.mediaWidthRule = exports.defaultBreakpoints = void 0;\nconst styled_components_1 = require(\"styled-components\");\nexports.defaultBreakpoints = {\n  xxs: 0,\n  xs: 320,\n  s: 576,\n  m: 768,\n  l: 992,\n  xl: 1200\n};\n// Breakpoint\nconst mediaWidthRule = rule => `${{\n  minWidth: 'min',\n  maxWidth: 'max'\n}[rule] || 'min'}-width`;\nexports.mediaWidthRule = mediaWidthRule;\nconst ruleTemplate = (rule, width) => `(${rule}: ${width}px)`;\nexports.ruleTemplate = ruleTemplate;\nconst mediaTemplate = rules => `@media only screen and ${rules}`;\nexports.mediaTemplate = mediaTemplate;\nconst getSmallestMedia = breakpoints => {\n  const keys = Object.keys(breakpoints);\n  return Number(keys.reduce((acc, key) => {\n    if (acc) {\n      return acc > breakpoints[key] ? breakpoints[key] : acc;\n    }\n    return breakpoints[key];\n  }, undefined));\n};\nexports.getSmallestMedia = getSmallestMedia;\nconst getNextMedia = (breakpoints, width) => {\n  const keys = Object.keys(breakpoints);\n  const nextBreakpoint = Number(keys.reduce((acc, key) => {\n    const current = breakpoints[key];\n    if (acc && width - current <= 0) {\n      return width - acc > Math.abs(width - current) || width - acc === 0 ? current : acc;\n    }\n    return (0, exports.getSmallestMedia)(breakpoints);\n  }, undefined));\n  if (nextBreakpoint === width) {\n    throw new Error(`The breakpoint of value ${nextBreakpoint} is the heighst there is, did you mean to use \"[media].minWidth\"?`);\n  }\n  return nextBreakpoint;\n};\nexports.getNextMedia = getNextMedia;\nconst mediaRules = (breakpoints, widthKey, rule, boundKey) => {\n  const width = breakpoints[widthKey];\n  const bound = breakpoints[boundKey];\n  let baseWidthRule = (0, exports.mediaWidthRule)(rule);\n  let boudWidthRule;\n  let baseRule = (0, exports.ruleTemplate)(baseWidthRule, width);\n  let boundRule;\n  if (bound && width) {\n    // Get correct rule based on width relative to bound\n    baseWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth');\n    boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n    baseRule = (0, exports.ruleTemplate)((0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth'), width);\n    boundRule = (0, exports.ruleTemplate)(boudWidthRule, bound);\n    return [].concat([baseRule], bound ? [boundRule] : []).join(' and ');\n  }\n  if (!bound && rule === 'only') {\n    // Get correct rule based on width relative to bound\n    boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n    boundRule = (0, exports.ruleTemplate)(boudWidthRule, (0, exports.getNextMedia)(breakpoints, width));\n  }\n  return [].concat([baseRule], boundRule ? [boundRule] : []).join(' and ');\n};\nexports.mediaRules = mediaRules;\nconst getMixin = function (breakpoints, key) {\n  let rule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'minWidth';\n  return bound => function () {\n    return (0, styled_components_1.css)`\n      ${(0, exports.mediaTemplate)((0, exports.mediaRules)(breakpoints, key, rule, bound))}{\n        ${(0, styled_components_1.css)(...arguments)}\n      }\n    `;\n  };\n};\nexports.getMixin = getMixin;\nconst getMediaShorthands = (breakpoints, rule) => Object.keys(breakpoints).reduce((acc, key) => ({\n  ...acc,\n  [key]: (0, exports.getMixin)(breakpoints, key, rule)()\n}), {});\nexports.getMediaShorthands = getMediaShorthands;\nconst getMedia = breakpoints => {\n  const mediasUp = (0, exports.getMediaShorthands)(breakpoints, 'minWidth');\n  const list = Object.keys(breakpoints);\n  return {\n    ...mediasUp,\n    minWidth: widthKey => (0, exports.getMixin)(breakpoints, widthKey, 'minWidth')(),\n    maxWidth: widthKey => (0, exports.getMixin)(breakpoints, widthKey, 'maxWidth')(),\n    only: (widthKey, boundKey) => (0, exports.getMixin)(breakpoints, widthKey, 'only')(boundKey),\n    list\n  };\n};\nexports.getMedia = getMedia;\nexports.default = exports.getMedia;","map":{"version":3,"names":["Object","defineProperty","exports","value","getMedia","getMediaShorthands","getMixin","mediaRules","getNextMedia","getSmallestMedia","mediaTemplate","ruleTemplate","mediaWidthRule","defaultBreakpoints","styled_components_1","require","xxs","xs","s","m","l","xl","rule","minWidth","maxWidth","width","rules","breakpoints","keys","Number","reduce","acc","key","undefined","nextBreakpoint","current","Math","abs","Error","widthKey","boundKey","bound","baseWidthRule","boudWidthRule","baseRule","boundRule","concat","join","css","mediasUp","list","only","default"],"sources":["C:/Users/cdabo/react/13-redux/node_modules/styled-components-breakpoints/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMedia = exports.getMediaShorthands = exports.getMixin = exports.mediaRules = exports.getNextMedia = exports.getSmallestMedia = exports.mediaTemplate = exports.ruleTemplate = exports.mediaWidthRule = exports.defaultBreakpoints = void 0;\nconst styled_components_1 = require(\"styled-components\");\nexports.defaultBreakpoints = {\n    xxs: 0,\n    xs: 320,\n    s: 576,\n    m: 768,\n    l: 992,\n    xl: 1200,\n};\n// Breakpoint\nconst mediaWidthRule = (rule) => (`${{ minWidth: 'min', maxWidth: 'max' }[rule] || 'min'}-width`);\nexports.mediaWidthRule = mediaWidthRule;\nconst ruleTemplate = (rule, width) => `(${rule}: ${width}px)`;\nexports.ruleTemplate = ruleTemplate;\nconst mediaTemplate = (rules) => (`@media only screen and ${rules}`);\nexports.mediaTemplate = mediaTemplate;\nconst getSmallestMedia = (breakpoints) => {\n    const keys = Object.keys(breakpoints);\n    return (Number(keys.reduce((acc, key) => {\n        if (acc) {\n            return acc > breakpoints[key] ? breakpoints[key] : acc;\n        }\n        return breakpoints[key];\n    }, undefined)));\n};\nexports.getSmallestMedia = getSmallestMedia;\nconst getNextMedia = (breakpoints, width) => {\n    const keys = Object.keys(breakpoints);\n    const nextBreakpoint = Number(keys.reduce((acc, key) => {\n        const current = breakpoints[key];\n        if (acc && width - current <= 0) {\n            return width - acc > Math.abs(width - current) || width - acc === 0 ? current : acc;\n        }\n        return (0, exports.getSmallestMedia)(breakpoints);\n    }, undefined));\n    if (nextBreakpoint === width) {\n        throw new Error(`The breakpoint of value ${nextBreakpoint} is the heighst there is, did you mean to use \"[media].minWidth\"?`);\n    }\n    return nextBreakpoint;\n};\nexports.getNextMedia = getNextMedia;\nconst mediaRules = (breakpoints, widthKey, rule, boundKey) => {\n    const width = breakpoints[widthKey];\n    const bound = breakpoints[boundKey];\n    let baseWidthRule = (0, exports.mediaWidthRule)(rule);\n    let boudWidthRule;\n    let baseRule = (0, exports.ruleTemplate)(baseWidthRule, width);\n    let boundRule;\n    if (bound && width) {\n        // Get correct rule based on width relative to bound\n        baseWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth');\n        boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n        baseRule = (0, exports.ruleTemplate)((0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth'), width);\n        boundRule = (0, exports.ruleTemplate)(boudWidthRule, bound);\n        return [].concat([baseRule], bound ? [boundRule] : []).join(' and ');\n    }\n    if (!bound && rule === 'only') {\n        // Get correct rule based on width relative to bound\n        boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n        boundRule = (0, exports.ruleTemplate)(boudWidthRule, (0, exports.getNextMedia)(breakpoints, width));\n    }\n    return [].concat([baseRule], boundRule ? [boundRule] : []).join(' and ');\n};\nexports.mediaRules = mediaRules;\nconst getMixin = (breakpoints, key, rule = 'minWidth') => (bound) => ((...args) => (0, styled_components_1.css) `\n      ${(0, exports.mediaTemplate)((0, exports.mediaRules)(breakpoints, key, rule, bound))}{\n        ${(0, styled_components_1.css)(...args)}\n      }\n    `);\nexports.getMixin = getMixin;\nconst getMediaShorthands = (breakpoints, rule) => (Object.keys(breakpoints).reduce((acc, key) => ({\n    ...acc,\n    [key]: (0, exports.getMixin)(breakpoints, key, rule)(),\n}), {}));\nexports.getMediaShorthands = getMediaShorthands;\nconst getMedia = (breakpoints) => {\n    const mediasUp = (0, exports.getMediaShorthands)(breakpoints, 'minWidth');\n    const list = Object.keys(breakpoints);\n    return ({\n        ...mediasUp,\n        minWidth: (widthKey) => (0, exports.getMixin)(breakpoints, widthKey, 'minWidth')(),\n        maxWidth: (widthKey) => (0, exports.getMixin)(breakpoints, widthKey, 'maxWidth')(),\n        only: (widthKey, boundKey) => (0, exports.getMixin)(breakpoints, widthKey, 'only')(boundKey),\n        list,\n    });\n};\nexports.getMedia = getMedia;\nexports.default = exports.getMedia;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}