{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { pending, fulfilled, rejected } from '../helper/ReduxHelper';\n\n/** Ajax처리를 위한 미들웨어 함수 정의 */\nexport const getList = createAsyncThunk(\"DepartmentSlice/getList\", async (payload, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  let result = null;\n  const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\n  try {\n    const response = await axios.get(URL);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 단일행 데이터 조회를 위한 비동기 함수\nexport const getItem = createAsyncThunk('DepartmentSlice/getItem', async (payload, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  let result = null;\n\n  // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\n  const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id', payload.id);\n  try {\n    const response = await axios.get(URL);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 데이터 저장을 위한 비동기 함수\nexport const postItem = createAsyncThunk('DepartmentSlice/postItem', async (payload, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  let result = null;\n\n  // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\n  const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id', payload.id);\n  try {\n    const response = await axios.get(URL);\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 데이터 수정을 위한 비동기 함수\n\n// 데이터 삭제를 위한 비동기 함수\n\nconst DepartmentSlice = createSlice({\n  name: 'DepartmentSlice',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  extraReducers: {\n    // 다중행 데이터 조회를 위한 액션 함수\n    [getList.pending]: pending,\n    [getList.fulfilled]: fulfilled,\n    [getList.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected\n  }\n});\nexport default DepartmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","pending","fulfilled","rejected","getList","payload","rejectWithValue","result","URL","process","env","REACT_APP_API_DEPARTMENT_LIST","response","get","data","err","getItem","REACT_APP_API_DEPARTMENT_ITEM","replace","id","postItem","DepartmentSlice","name","initialState","loading","error","extraReducers","reducer"],"sources":["C:/Users/cdabo/react/14-redux-crud/src/slices/DepartmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {pending,fulfilled,rejected} from '../helper/ReduxHelper';\r\n\r\n\r\n/** Ajax처리를 위한 미들웨어 함수 정의 */\r\nexport const getList = createAsyncThunk(\"DepartmentSlice/getList\", async (payload, {rejectWithValue }) => {\r\n    let result = null;\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\r\n\r\n    try {\r\n        const response = await axios.get(URL);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 단일행 데이터 조회를 위한 비동기 함수\r\nexport const getItem = createAsyncThunk('DepartmentSlice/getItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id',payload.id);\r\n\r\n    try {\r\n        const response = await axios.get(URL);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 데이터 저장을 위한 비동기 함수\r\nexport const postItem = createAsyncThunk('DepartmentSlice/postItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id',payload.id);\r\n\r\n    try {\r\n        const response = await axios.get(URL);\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 데이터 수정을 위한 비동기 함수\r\n\r\n// 데이터 삭제를 위한 비동기 함수\r\n\r\n\r\nconst DepartmentSlice = createSlice({\r\n    name: 'DepartmentSlice',\r\n    initialState: {\r\n        data: null,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    extraReducers: {\r\n        // 다중행 데이터 조회를 위한 액션 함수\r\n        [getList.pending]: pending,\r\n        [getList.fulfilled]: fulfilled,\r\n        [getList.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [getItem.pending]: pending,\r\n        [getItem.fulfilled]: fulfilled,\r\n        [getItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [getItem.pending]: pending,\r\n        [getItem.fulfilled]: fulfilled,\r\n        [getItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [getItem.pending]: pending,\r\n        [getItem.fulfilled]: fulfilled,\r\n        [getItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [getItem.pending]: pending,\r\n        [getItem.fulfilled]: fulfilled,\r\n        [getItem.rejected]: rejected,\r\n    },\r\n});\r\nexport default DepartmentSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}