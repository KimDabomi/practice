{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { pending, fulfilled, rejected } from '../helper/ReduxHelper';\n\n/** Ajax처리를 위한 미들웨어 함수 정의 */\n// 다중행 데이터 조회를 위한 비동기 함수\nexport const getList = createAsyncThunk(\"DepartmentSlice/getList\", async (payload, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  let result = null;\n  const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\n\n  // './pages/DepartmentList.js'에서 검색어를 {keyword: 검색어값} 형태로 전달하면 payload객체를 통해 넘어온다. -> payload.keyword\n\n  // 여기서는 그 값을 학과명 검색어로 활용\n  let params = null;\n\n  // payload객체가 null이나 underfined가 아니고, 그 안의 keyword값이 존재한다면\n  if (payload !== null && payload !== void 0 && payload.keyword) {\n    // axios에 설정할 querystring 데이터 구성\n    params = {\n      dname: payload.keywolr\n    };\n  }\n  try {\n    const response = await axios.get(URL, {\n      dname: payload.dname,\n      loc: payload.loc\n    });\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 단일행 데이터 조회를 위한 비동기 함수\nexport const getItem = createAsyncThunk('DepartmentSlice/getItem', async (payload, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  let result = null;\n\n  // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\n  const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id', payload.id);\n  try {\n    const response = await axios.get(URL, {\n      dname: payload.dname,\n      loc: payload.loc\n    });\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 데이터 저장을 위한 비동기 함수\nexport const postItem = createAsyncThunk('DepartmentSlice/postItem', async (payload, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  let result = null;\n  const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\n  try {\n    const response = await axios.post(URL, {\n      dname: payload.dname,\n      loc: payload.loc\n    });\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 데이터 수정을 위한 비동기 함수\nexport const putItem = createAsyncThunk('DepartmentSlice/putItem', async (payload, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n  let result = null;\n  const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id', payload.id);\n  try {\n    const response = await axios.put(URL, {\n      dname: payload.dname,\n      loc: payload.loc\n    });\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\n\n// 데이터 삭제를 위한 비동기 함수\nexport const deleteItem = createAsyncThunk('DepartmentSlice/deleteItem', async (payload, _ref5) => {\n  let {\n    rejectWithValue\n  } = _ref5;\n  let result = null;\n  const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id', payload.id);\n  try {\n    const response = await axios.delete(URL, {\n      dname: payload.dname,\n      loc: payload.loc\n    });\n    result = response.data;\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n  return result;\n});\nconst DepartmentSlice = createSlice({\n  name: 'DepartmentSlice',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    // 다중행 데이터 조회를 위한 액션 함수\n    [getList.pending]: pending,\n    [getList.fulfilled]: fulfilled,\n    [getList.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [postItem.pending]: pending,\n    [postItem.fulfilled]: fulfilled,\n    [postItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [putItem.pending]: pending,\n    [putItem.fulfilled]: fulfilled,\n    [putItem.rejected]: rejected,\n    // 단일행 데이터 조회를 위한 액션 함수\n    [deleteItem.pending]: pending,\n    [deleteItem.fulfilled]: fulfilled,\n    [deleteItem.rejected]: rejected\n  }\n});\nexport default DepartmentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","pending","fulfilled","rejected","getList","payload","rejectWithValue","result","URL","process","env","REACT_APP_API_DEPARTMENT_LIST","params","keyword","dname","keywolr","response","get","loc","data","err","getItem","REACT_APP_API_DEPARTMENT_ITEM","replace","id","postItem","post","putItem","put","deleteItem","delete","DepartmentSlice","name","initialState","loading","error","reducers","extraReducers","reducer"],"sources":["C:/Users/cdabo/react/14-redux-crud/src/slices/DepartmentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport {pending,fulfilled,rejected} from '../helper/ReduxHelper';\r\n\r\n\r\n/** Ajax처리를 위한 미들웨어 함수 정의 */\r\n// 다중행 데이터 조회를 위한 비동기 함수\r\nexport const getList = createAsyncThunk(\"DepartmentSlice/getList\", async (payload, {rejectWithValue }) => {\r\n    let result = null;\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\r\n    \r\n    // './pages/DepartmentList.js'에서 검색어를 {keyword: 검색어값} 형태로 전달하면 payload객체를 통해 넘어온다. -> payload.keyword\r\n    \r\n    // 여기서는 그 값을 학과명 검색어로 활용\r\n    let params = null;\r\n\r\n    // payload객체가 null이나 underfined가 아니고, 그 안의 keyword값이 존재한다면\r\n    if(payload?.keyword) {\r\n        // axios에 설정할 querystring 데이터 구성\r\n        params = {\r\n            dname: payload.keywolr\r\n        }\r\n    } \r\n    try {\r\n        const response = await axios.get(URL,{\r\n            dname: payload.dname,\r\n            loc: payload.loc\r\n        });\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 단일행 데이터 조회를 위한 비동기 함수\r\nexport const getItem = createAsyncThunk('DepartmentSlice/getItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    // 환경설정 파일에 정의된 URL에서 ':id' 부분을 찾아서 payload를 통해 전달된 일련번호로 치환\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id',payload.id);\r\n\r\n    try {\r\n        const response = await axios.get(URL,{\r\n            dname: payload.dname,\r\n            loc: payload.loc\r\n        });\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 데이터 저장을 위한 비동기 함수\r\nexport const postItem = createAsyncThunk('DepartmentSlice/postItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_LIST;\r\n\r\n    try {\r\n        const response = await axios.post(URL,{\r\n            dname: payload.dname,\r\n            loc: payload.loc\r\n        });\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 데이터 수정을 위한 비동기 함수\r\nexport const putItem = createAsyncThunk('DepartmentSlice/putItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id',payload.id);\r\n\r\n    try {\r\n        const response = await axios.put(URL,{\r\n            dname: payload.dname,\r\n            loc: payload.loc\r\n        });\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n// 데이터 삭제를 위한 비동기 함수\r\nexport const deleteItem = createAsyncThunk('DepartmentSlice/deleteItem', async(payload,{rejectWithValue}) => {\r\n    let result = null;\r\n\r\n    const URL = process.env.REACT_APP_API_DEPARTMENT_ITEM.replace(':id',payload.id);\r\n\r\n    try {\r\n        const response = await axios.delete(URL,{\r\n            dname: payload.dname,\r\n            loc: payload.loc\r\n        });\r\n        result = response.data;\r\n    } catch (err) {\r\n        result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n});\r\n\r\n\r\nconst DepartmentSlice = createSlice({\r\n    name: 'DepartmentSlice',\r\n    initialState: {\r\n        data: null,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        // 다중행 데이터 조회를 위한 액션 함수\r\n        [getList.pending]: pending,\r\n        [getList.fulfilled]: fulfilled,\r\n        [getList.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [getItem.pending]: pending,\r\n        [getItem.fulfilled]: fulfilled,\r\n        [getItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [postItem.pending]: pending,\r\n        [postItem.fulfilled]: fulfilled,\r\n        [postItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [putItem.pending]: pending,\r\n        [putItem.fulfilled]: fulfilled,\r\n        [putItem.rejected]: rejected,\r\n\r\n        // 단일행 데이터 조회를 위한 액션 함수\r\n        [deleteItem.pending]: pending,\r\n        [deleteItem.fulfilled]: fulfilled,\r\n        [deleteItem.rejected]: rejected\r\n    }\r\n});\r\nexport default DepartmentSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}