{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\10-simple-ajax\\\\src\\\\pages\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NewsList from '../components/NewsList';\nimport Spinner from '../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // 화면에 표시할 상태값 (ajax 연동 결과로 받아올 json) -> 초기값을 반 배열로 정의\n  // ajax 처리는 비동기이므로 데이터를 받아오는 처리의 완료 여부와 상관없이 화면 출력이 먼저 수행된다. 그러므로 ajax의 결과를 상태값에 저장하여 데이터를 받아온 후 화면이 자동 갱신되도록 처리해야 한다.\n  const [newsList, setNewList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 페이지가 처음 열렸을 때 실행할 hook\n  // hook에 전달되는 콜백함수에 직접적으로 async를 적용할 수 없다.\n  useEffect(() => {\n    // async~await 처리를 위한 즉시 실행 함수 정의\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n\n      // ajax의 결과를 저장할 변수\n      let json = null;\n      try {\n        const response = await axios.get(\"/news/\");\n        json = response.data;\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다.\\n${e.message}`);\n        return;\n      } finally {\n        setLoading(false);\n      }\n\n      // ajax의 요청 결과를 상태값에 반영한다\n      setNewList(json);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsList, {\n      news: newsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}, \"S82yZATl9NLZveeRtveYfbs3CpQ=\")), \"S82yZATl9NLZveeRtveYfbs3CpQ=\");\n_c2 = News;\nexport default News;\nvar _c, _c2;\n$RefreshReg$(_c, \"News$memo\");\n$RefreshReg$(_c2, \"News\");","map":{"version":3,"names":["React","memo","useState","useEffect","axios","NewsList","Spinner","News","newsList","setNewList","loading","setLoading","json","response","get","data","e","console","error","alert","message"],"sources":["C:/Users/cdabo/react/10-simple-ajax/src/pages/News.js"],"sourcesContent":["import React,{memo,useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport NewsList from '../components/NewsList';\r\nimport Spinner from '../components/Spinner';\r\n\r\nconst News = memo(() => {\r\n  // 화면에 표시할 상태값 (ajax 연동 결과로 받아올 json) -> 초기값을 반 배열로 정의\r\n  // ajax 처리는 비동기이므로 데이터를 받아오는 처리의 완료 여부와 상관없이 화면 출력이 먼저 수행된다. 그러므로 ajax의 결과를 상태값에 저장하여 데이터를 받아온 후 화면이 자동 갱신되도록 처리해야 한다.\r\n  const [newsList, setNewList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 페이지가 처음 열렸을 때 실행할 hook\r\n  // hook에 전달되는 콜백함수에 직접적으로 async를 적용할 수 없다.\r\n  useEffect(() => {\r\n    // async~await 처리를 위한 즉시 실행 함수 정의\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n\r\n      // ajax의 결과를 저장할 변수\r\n      let json = null;\r\n      try {\r\n        const response = await axios.get(\"/news/\");\r\n        json = response.data;\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다.\\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n\r\n      // ajax의 요청 결과를 상태값에 반영한다\r\n      setNewList(json);\r\n    })();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Spinner loading={loading} />\r\n      <NewsList news={newsList} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default News;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,IAAI,EAACC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,MAAMC,IAAI,iCAAGN,IAAI,SAAC,MAAM;EAAA;EACtB;EACA;EACA,MAAM,CAACO,QAAQ,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACAC,SAAS,CAAC,MAAM;IACd;IACA,CAAC,YAAY;MACX;MACAQ,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAIC,IAAI,GAAG,IAAI;MACf,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,QAAQ,CAAC;QAC1CF,IAAI,GAAGC,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAChBG,KAAK,CAAE,oBAAmBH,CAAC,CAACI,OAAQ,EAAC,CAAC;QACtC;MACF,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;;MAEA;MACAF,UAAU,CAACG,IAAI,CAAC;IAClB,CAAC,GAAG;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE;IAAA,wBACE,QAAC,OAAO;MAAC,OAAO,EAAEF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,QAAQ;MAAC,IAAI,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV,CAAC,kCAAC;AAAC,MAtCGD,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}