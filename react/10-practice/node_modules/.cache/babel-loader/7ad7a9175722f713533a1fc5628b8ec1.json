{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\10-simple-ajax\\\\src\\\\pages\\\\Department.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from '../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Department = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\n  const [loading, setLoading] = React.useState(false);\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\n  const [department, setDepartment] = React.useState([]);\n  // // 검색 키워드\n  // const [keyword, setKeyword] = React.useState('');\n  // // 삭제할 항목에 대한 id값을 저장하기 위한 상태값\n  // const [dropId, setDropId] = React.useState(-1);\n  // // 수정할 항목에 대한 id값을 저장하기 위한 상태값\n  // const [updateId, setUpdateId] = React.useState(-1);\n\n  // 페이지가 처음 열렸을 때 실행할 hook\n  useEffect(() => {\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n      let json = null;\n      try {\n        const response = await axios.get(\"/department/\");\n        json = response.data;\n      } catch (e) {\n        console.error(e);\n        alert(`'Ajax 연동 실패'`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      visible: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD559\\uACFC\\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uC704\\uCE58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: department.length > 0 ? department.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.dname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.loc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            align: \"center\",\n            children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}, \"2TnhHpryBF42oOsxrMXC5D92yX0=\")), \"2TnhHpryBF42oOsxrMXC5D92yX0=\");\n_c2 = Department;\nexport default _c3 = /*#__PURE__*/React.memo(Department);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Department$memo\");\n$RefreshReg$(_c2, \"Department\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useEffect","axios","Spinner","Department","loading","setLoading","department","setDepartment","json","response","get","data","e","console","error","alert","length","map","item","index","id","dname","loc"],"sources":["C:/Users/cdabo/react/10-simple-ajax/src/pages/Department.js"],"sourcesContent":["import React,{memo,useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../components/Spinner';\r\n\r\nconst Department = memo(() => {\r\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\r\n  const [loading, setLoading] = React.useState(false);\r\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\r\n  const [department, setDepartment] = React.useState([]);\r\n  // // 검색 키워드\r\n  // const [keyword, setKeyword] = React.useState('');\r\n  // // 삭제할 항목에 대한 id값을 저장하기 위한 상태값\r\n  // const [dropId, setDropId] = React.useState(-1);\r\n  // // 수정할 항목에 대한 id값을 저장하기 위한 상태값\r\n  // const [updateId, setUpdateId] = React.useState(-1);\r\n\r\n  // 페이지가 처음 열렸을 때 실행할 hook\r\n  useEffect(() => {\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n      \r\n      let json = null;\r\n      \r\n      try {\r\n        const response = await axios.get(\"/department/\");\r\n        json = response.data;\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`'Ajax 연동 실패'`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n    })();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Spinner visible={loading} />\r\n      <h2>학과목록</h2>\r\n      <hr />\r\n      <table border='1'>\r\n        <thead>\r\n          <tr>\r\n            <th>학과번호</th>\r\n            <th>학과명</th>\r\n            <th>학과위치</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {department.length > 0 ? (\r\n            department.map((item,index) => {\r\n              return (\r\n                <tr key={item.id}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.dname}</td>\r\n                  <td>{item.loc}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='3' align='center'>\r\n                검색 결과가 없습니다.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(Department);"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,IAAI,EAACC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAE5C,MAAMC,UAAU,iCAAGL,IAAI,SAAC,MAAM;EAAA;EAC5B;EACA,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACE,QAAQ,CAAC,KAAK,CAAC;EACnD;EACA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX;MACAK,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAIG,IAAI,GAAG,IAAI;MAEf,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,cAAc,CAAC;QAChDF,IAAI,GAAGC,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAChBG,KAAK,CAAE,cAAa,CAAC;QACrB;MACF,CAAC,SAAS;QACRV,UAAU,CAACD,OAAO,IAAI,KAAK,CAAC;MAC9B;IACF,CAAC,GAAG;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE;IAAA,wBACE,QAAC,OAAO;MAAC,OAAO,EAAEA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACb;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,MAAM,EAAC,GAAG;MAAA,wBACf;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY,eACZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa;QAAA;UAAA;UAAA;UAAA;QAAA;MACV;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGE,UAAU,CAACU,MAAM,GAAG,CAAC,GACpBV,UAAU,CAACW,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAK;UAC7B,oBACE;YAAA,wBACE;cAAA,UAAKD,IAAI,CAACE;YAAE;cAAA;cAAA;cAAA;YAAA,QAAM,eAClB;cAAA,UAAKF,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eACrB;cAAA,UAAKH,IAAI,CAACI;YAAG;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA,GAHZJ,IAAI,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QAIX;QAET,CAAC,CAAC,gBAEF;UAAA,uBACE;YAAI,OAAO,EAAC,GAAG;YAAC,KAAK,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAEzB;UAAA;UAAA;UAAA;QAAA;MAER;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC,kCAAC;AAAC,MApEGjB,UAAU;AAsEhB,kCAAeN,KAAK,CAACC,IAAI,CAACK,UAAU,CAAC;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}