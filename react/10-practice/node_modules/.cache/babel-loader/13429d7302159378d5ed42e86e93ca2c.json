{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\10-simple-ajax\\\\src\\\\pages\\\\Professor.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Spinner from '../components/Spinner';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Professor = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\n  const [loading, setLoading] = useState(false);\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\n  const [professor, setProfessor] = useState([]);\n  // 수정할 항목에 대한 id값을 지정하기 위한 상태값\n  const [updateId, setUpdateId] = React.useState(-1);\n\n  // QueryString으로 전달되는 검색 키워드를 받는다.\n  const {\n    search\n  } = useLocation();\n  const query = new URLSearchParams(search);\n  const {\n    keyword\n  } = Object.fromEntries(query);\n\n  // 페이지 강제 이동을 위한 객체 생성\n  const navigate = useNavigate();\n\n  // 페이지가 처음 열렸을 때 실행할 hook\n  useEffect(() => {\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n      let json = null;\n      try {\n        const response = await axios.get(\"/professor/\", {\n          // 검색어가 있다면 dname값으로 설정, 그렇지 않으면 정의 안함\n          params: keyword ? {\n            name: keyword\n          } : null\n        });\n        json = response.data;\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      // ajax의 요청 결과를 상태값에 반영한다. -> 함수형 업데이트\n      setDepartment(professor => json);\n    })();\n  }, [keyword]);\n\n  // 검색폼에서의 전송이벤트 - 성능 최적화를 위해 useCallback 적용\n  const onSearchSubmit = useCallback(e => {\n    e.preventDefault();\n    console.log('submit!');\n    // 검색어를 QueryString으로 지정하여 페이지로 이동 (여기서 keyword는 form의 name속성으로 불러온 input)\n    navigate(`/professor?keyword=${e.currentTarget.keyword.value}`);\n  }, [navigate]);\n\n  // 데이터 추가 submit 이벤트\n  const onDataAddSubmit = useCallback(e => {\n    e.preventDefault();\n\n    // 이벤트가 발생한 폼 자신\n    const form = e.currentTarget;\n\n    // 폼 안의 input태그에 name속성으로 접근하여 입력값 취득\n    const name = form.name.value;\n    const userid = form.userid.value;\n    const position = form.position.value;\n    const sal = form.sal.value;\n    const hiredate = form.hiredate.value.substring(0, 10);\n    const comm = form.comm.value;\n    const deptno = form.deptno.value;\n    (async () => {\n      setLoading(loading => true);\n      let json = null;\n      try {\n        const response = await axios.post(\"/professor/\", {\n          // 입력값을 post 파라미터로 전달\n          name: name,\n          userid: userid,\n          position: position,\n          sal: sal,\n          hiredate: hiredate,\n          comm: comm,\n          deptno: deptno\n        });\n        json = response.data;\n        console.group('데이터 저장 결과');\n        console.log(json);\n        console.groupEnd();\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      setProfessor(professor => professor.concat(json));\n      form.reset();\n    })();\n  }, []);\n\n  // 데이터 삭제 버튼 click 이벤트\n  const onDataDeleteClick = useCallback(e => {\n    // 클릭된 자기 자신\n    const current = e.currentTarget;\n    // 클릭된 자신에게 숨어있는 data-id값을 추출\n    const id = parseInt(current.dataset.id);\n    console.log(`삭제 대상의 id값: ${id}`);\n\n    // 삭제 요청을 위한 ajax 처리\n    (async () => {\n      setLoading(loading => true);\n      try {\n        // 삭제의 경우 ajax의 응답결과가 필요없다.\n        await axios.delete(`/professor/${id}`);\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      // ajax 삭제처리가 완료되면 프론트엔드가 가지고 있던 복사본(department 상태값)에서도 동일한 항목을 찾아야한다.\n      setProfessor(professor => {\n        const dropId = professor.findIndex((v, i) => {\n          return v.id === id;\n        });\n        console.log(`제거할 대상의 배열 인덱스: ${dropId}`);\n\n        // 상태값이 배열이므로 인덱스 번호가 dropId인 위치에서 1개의 데이터 삭제\n        professor.splice(dropId, 1);\n\n        // 제거 결과를 리턴\n        return professor;\n      });\n    })();\n    setUpdateId(-1);\n  }, []);\n\n  // 데이터 수정 버튼 click 이벤트\n  const onDataEditClick = useCallback(e => {\n    e.preventDefault();\n\n    // 수정할 항목에 대한 인덱스 번호를 상태값으로 설정한다.\n    const current = e.currentTarget;\n    const id = parseInt(current.dataset.id);\n    setUpdateId(id);\n  }, []);\n\n  // 데이터 수정사항 저장 버튼 click 이벤트\n  const onDataEditSubmit = useCallback(e => {\n    e.preventDefault();\n\n    // 이벤트가 발생한 form요소 취득\n    const current = e.currentTarget;\n\n    // form요소 내의 input 요소들을 name속성값으로 접근하여 입력값을 얻음\n    const name = current.name.value;\n    const userid = current.userid.value;\n    const position = current.position.value;\n    const sal = current.sal.value;\n    const hiredate = current.hiredate.value.substring(0, 10);\n    const comm = current.comm.value;\n    const deptno = current.deptno.value;\n\n    // 백엔드에 데이터가 수정되었음을 알린다.\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n\n      // 수정 결과에 대한 json\n      let json = null;\n\n      // ajax를 통한 데이터 삭제 요청\n      try {\n        const response = await axios.get(`/professor/${id}`, {\n          name: name,\n          userid: userid,\n          position: position,\n          sal: sal,\n          hiredate: hiredate,\n          comm: comm,\n          deptno: deptno\n        });\n        // 수정 결과에 대한 json을 받음\n        json = response.data;\n        console.group('데이터 수정 결과');\n        console.log(json);\n        console.groupEnd();\n      } catch (e) {\n        console.error(e);\n        alert(`데이터  수정에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(false);\n      }\n\n      // 수정 결과로 원본 배열의 원소를 교체한다.\n      setProfessor(professor => {\n        // 원본 상태값과 비교하여 수정된 항목의 배열 인덱스를 찾는다.\n        const editId = professor.findIndex((v, i) => v.id === json.id);\n        console.log(`제거할 대상의 배열 인덱스: ${editId}`);\n\n        // 상태값이 배열이므로 인덱스 번호가 editId인 위치에서 1개의 데이터를 교체\n        professor.splice(editId, 1, json);\n        return professor;\n      });\n    })();\n    // 상태변수를 되돌린다.\n    setUpdateId(-1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onDataAddSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"\\uAD50\\uC218\\uC774\\uB984 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userid\",\n          children: \"\\uC704\\uCE58 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userid\",\n          id: \"userid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"keyword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onDataEditSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD559\\uACFC\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD559\\uACFC\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD559\\uACFC\\uC704\\uCE58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: !department.length ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              align: \"center\",\n              children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this) : department.map((item, index) => {\n            // 상태값에 저장되어 있는 수정할 항목의 인덱스에 해당하는 원소라면?\n            if (item.id === updateId) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: \"id\",\n                  defaultValue: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"dname\",\n                    defaultValue: item.dname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"loc\",\n                    defaultValue: item.loc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"\\uC218\\uC815\\uC0AC\\uD56D \\uC800\\uC7A5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.dname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.loc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    \"data-id\": item.id,\n                    onClick: onDataEditClick,\n                    children: \"\\uC218\\uC815\\uD558\\uAE30\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    \"data-id\": item.id,\n                    onClick: onDataDeleteClick,\n                    children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}, \"bSD9S9n5MuH5j7tpp49iZkIdgOI=\", false, function () {\n  return [useLocation, useNavigate];\n})), \"bSD9S9n5MuH5j7tpp49iZkIdgOI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = Professor;\nexport default _c3 = /*#__PURE__*/React.memo(Professor);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Professor$memo\");\n$RefreshReg$(_c2, \"Professor\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useEffect","useCallback","axios","Spinner","useLocation","useNavigate","Professor","loading","setLoading","professor","setProfessor","updateId","setUpdateId","search","query","URLSearchParams","keyword","Object","fromEntries","navigate","json","response","get","params","name","data","e","console","error","alert","message","setDepartment","onSearchSubmit","preventDefault","log","currentTarget","value","onDataAddSubmit","form","userid","position","sal","hiredate","substring","comm","deptno","post","group","groupEnd","concat","reset","onDataDeleteClick","current","id","parseInt","dataset","delete","dropId","findIndex","v","i","splice","onDataEditClick","onDataEditSubmit","editId","department","length","map","item","index","dname","loc"],"sources":["C:/Users/cdabo/react/10-simple-ajax/src/pages/Professor.js"],"sourcesContent":["import React,{memo,useState,useEffect,useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../components/Spinner';\r\nimport {useLocation,useNavigate} from 'react-router-dom';\r\n\r\nconst Professor = memo(() => {\r\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\r\n  const [loading, setLoading] = useState(false);\r\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\r\n  const [professor, setProfessor] = useState([]);\r\n  // 수정할 항목에 대한 id값을 지정하기 위한 상태값\r\n  const [updateId, setUpdateId] = React.useState(-1);\r\n\r\n  // QueryString으로 전달되는 검색 키워드를 받는다.\r\n  const {search} = useLocation();\r\n  const query = new URLSearchParams(search);\r\n  const {keyword} = Object.fromEntries(query);\r\n\r\n  // 페이지 강제 이동을 위한 객체 생성\r\n  const navigate = useNavigate();\r\n\r\n  // 페이지가 처음 열렸을 때 실행할 hook\r\n  useEffect(() => {\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n      \r\n      let json = null;\r\n      \r\n      try {\r\n        const response = await axios.get(\"/professor/\", {\r\n          // 검색어가 있다면 dname값으로 설정, 그렇지 않으면 정의 안함\r\n          params: keyword ? {name: keyword} : null\r\n        });\r\n        json = response.data;\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n      // ajax의 요청 결과를 상태값에 반영한다. -> 함수형 업데이트\r\n      setDepartment(professor => json);\r\n    })();\r\n  },[keyword]);\r\n\r\n  // 검색폼에서의 전송이벤트 - 성능 최적화를 위해 useCallback 적용\r\n  const onSearchSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n    console.log('submit!');\r\n    // 검색어를 QueryString으로 지정하여 페이지로 이동 (여기서 keyword는 form의 name속성으로 불러온 input)\r\n    navigate(`/professor?keyword=${e.currentTarget.keyword.value}`)\r\n  },[navigate]);\r\n\r\n  // 데이터 추가 submit 이벤트\r\n  const onDataAddSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 이벤트가 발생한 폼 자신\r\n    const form = e.currentTarget;\r\n    \r\n    // 폼 안의 input태그에 name속성으로 접근하여 입력값 취득\r\n    const name = form.name.value;\r\n    const userid = form.userid.value;\r\n    const position = form.position.value;\r\n    const sal = form.sal.value;\r\n    const hiredate = form.hiredate.value.substring(0,10);\r\n    const comm = form.comm.value;\r\n    const deptno = form.deptno.value;\r\n\r\n    (async () => {\r\n      setLoading(loading => true);\r\n      let json = null;\r\n\r\n      try {\r\n        const response = await axios.post(\"/professor/\", {\r\n          // 입력값을 post 파라미터로 전달\r\n          name: name,\r\n          userid: userid,\r\n          position: position,\r\n          sal: sal,\r\n          hiredate: hiredate,\r\n          comm: comm,\r\n          deptno: deptno\r\n        });\r\n        json = response.data;\r\n\r\n        console.group('데이터 저장 결과');\r\n        console.log(json);\r\n        console.groupEnd();\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n\r\n      setProfessor(professor => professor.concat(json));\r\n      form.reset();\r\n    })();\r\n  },[]);\r\n\r\n  // 데이터 삭제 버튼 click 이벤트\r\n  const onDataDeleteClick = useCallback(e => {\r\n    // 클릭된 자기 자신\r\n    const current = e.currentTarget;\r\n    // 클릭된 자신에게 숨어있는 data-id값을 추출\r\n    const id = parseInt(current.dataset.id);\r\n    console.log(`삭제 대상의 id값: ${id}`);\r\n\r\n    // 삭제 요청을 위한 ajax 처리\r\n    (async () => {\r\n      setLoading(loading => true);\r\n\r\n      try {\r\n        // 삭제의 경우 ajax의 응답결과가 필요없다.\r\n        await axios.delete(`/professor/${id}`);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n      // ajax 삭제처리가 완료되면 프론트엔드가 가지고 있던 복사본(department 상태값)에서도 동일한 항목을 찾아야한다.\r\n      setProfessor(professor => {\r\n        const dropId = professor.findIndex((v,i) => {\r\n          return v.id === id;\r\n        });\r\n        console.log(`제거할 대상의 배열 인덱스: ${dropId}`);\r\n        \r\n        // 상태값이 배열이므로 인덱스 번호가 dropId인 위치에서 1개의 데이터 삭제\r\n        professor.splice(dropId,1);\r\n\r\n        // 제거 결과를 리턴\r\n        return professor;\r\n      });\r\n    })();\r\n    setUpdateId(-1);\r\n  },[]);\r\n\r\n  // 데이터 수정 버튼 click 이벤트\r\n  const onDataEditClick = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 수정할 항목에 대한 인덱스 번호를 상태값으로 설정한다.\r\n    const current = e.currentTarget;\r\n    const id = parseInt(current.dataset.id);\r\n    setUpdateId(id);\r\n  },[]);\r\n  \r\n\r\n  // 데이터 수정사항 저장 버튼 click 이벤트\r\n  const onDataEditSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 이벤트가 발생한 form요소 취득\r\n    const current = e.currentTarget;\r\n\r\n    // form요소 내의 input 요소들을 name속성값으로 접근하여 입력값을 얻음\r\n    const name = current.name.value;\r\n    const userid = current.userid.value;\r\n    const position = current.position.value;\r\n    const sal = current.sal.value;\r\n    const hiredate = current.hiredate.value.substring(0,10);\r\n    const comm = current.comm.value;\r\n    const deptno = current.deptno.value;\r\n\r\n    // 백엔드에 데이터가 수정되었음을 알린다.\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n\r\n      // 수정 결과에 대한 json\r\n      let json = null;\r\n      \r\n      // ajax를 통한 데이터 삭제 요청\r\n      try {\r\n        const response = await axios.get(`/professor/${id}`, {\r\n            name: name,\r\n            userid: userid,\r\n            position: position,\r\n            sal: sal,\r\n            hiredate: hiredate,\r\n            comm: comm,\r\n            deptno: deptno\r\n        });\r\n        // 수정 결과에 대한 json을 받음\r\n        json = response.data;\r\n        console.group('데이터 수정 결과');\r\n        console.log(json);\r\n        console.groupEnd();\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터  수정에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n\r\n      // 수정 결과로 원본 배열의 원소를 교체한다.\r\n      setProfessor(professor => {\r\n        // 원본 상태값과 비교하여 수정된 항목의 배열 인덱스를 찾는다.\r\n        const editId = professor.findIndex((v,i) => v.id === json.id);\r\n        console.log(`제거할 대상의 배열 인덱스: ${editId}`);\r\n\r\n        // 상태값이 배열이므로 인덱스 번호가 editId인 위치에서 1개의 데이터를 교체\r\n        professor.splice(editId,1,json);\r\n        return professor;\r\n      });\r\n    })();\r\n    // 상태변수를 되돌린다.\r\n    setUpdateId(-1);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Spinner loading={loading} />\r\n      {/* 입력폼 */}\r\n      <form onSubmit={onDataAddSubmit}>\r\n        <div>\r\n          <label htmlFor='name'>교수이름 : </label>\r\n          <input type='text' name='name' id='name' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='userid'>위치 : </label>\r\n          <input type='text' name='userid' id='userid' />\r\n        </div>\r\n        <button type='submit'>저장하기</button>\r\n      </form>\r\n\r\n      {/* 검색폼 */}\r\n      <form onSubmit={onSearchSubmit}>\r\n        <input type='text' name='keyword' />\r\n        <button type='submit'>검색</button>\r\n      </form>\r\n\r\n      <hr />\r\n\r\n      <form onSubmit={onDataEditSubmit}>\r\n        <table border='1'>\r\n          <thead>\r\n            <tr>\r\n              <th>학과번호</th>\r\n              <th>학과명</th>\r\n              <th>학과위치</th>\r\n              <th>수정</th>\r\n              <th>삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!department.length ? (\r\n              <tr>\r\n                <td colSpan='5' align='center'>\r\n                  검색 결과가 없습니다.\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              department.map((item,index) => {\r\n                // 상태값에 저장되어 있는 수정할 항목의 인덱스에 해당하는 원소라면?\r\n                if (item.id === updateId) {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      {/* 수정을 위한 input요소를 표시 */}\r\n                      <input type='hidden' name='id' defaultValue={item.id} />\r\n                      <td>{item.id}</td>\r\n                      <td><input type='text' name='dname' defaultValue={item.dname} /></td>\r\n                      <td><input type='text' name='loc' defaultValue={item.loc} /></td>\r\n                      <td colSpan='2'>\r\n                        <button type='submit'>수정사항 저장</button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      <td>{item.id}</td>\r\n                      <td>{item.dname}</td>\r\n                      <td>{item.loc}</td>\r\n                      <td>\r\n                        <button type='button' data-id={item.id} onClick={onDataEditClick}>수정하기</button>\r\n                      </td>\r\n                      <td>\r\n                        <button type='button' data-id={item.id} onClick={onDataDeleteClick}>삭제하기</button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(Professor);"],"mappings":"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"},"metadata":{},"sourceType":"module"}