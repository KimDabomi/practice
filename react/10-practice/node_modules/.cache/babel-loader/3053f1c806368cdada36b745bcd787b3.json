{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cdabo\\\\react\\\\10-simple-ajax\\\\src\\\\pages\\\\Department.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Spinner from '../components/Spinner';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { fireEvent } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Department = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\n  const [loading, setLoading] = useState(false);\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\n  const [department, setDepartment] = useState([]);\n  // 수정할 항목에 대한 id값을 지정하기 위한 상태값\n  const [updateId, setUpdateId] = useState(-1);\n\n  // QueryString으로 전달되는 검색 키워드를 받는다.\n  const {\n    search\n  } = useLocation();\n  const query = new URLSearchParams(search);\n  const {\n    keyword\n  } = Object.fromEntries(query);\n\n  // 페이지 강제 이동을 위한 객체 생성\n  const navigate = useNavigate();\n\n  // // 검색 키워드\n  // const [keyword, setKeyword] = useState('');\n  // // 삭제할 항목에 대한 id값을 저장하기 위한 상태값\n  // const [dropId, setDropId] = useState(-1);\n  // // 수정할 항목에 대한 id값을 저장하기 위한 상태값\n  // const [updateId, setUpdateId] = useState(-1);\n\n  // 페이지가 처음 열렸을 때 실행할 hook\n  useEffect(() => {\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n      let json = null;\n      try {\n        const response = await axios.get(\"/department/\", {\n          // 검색어가 있다면 dname값으로 설정, 그렇지 않으면 정의 안함\n          params: keyword ? {\n            dname: keyword\n          } : null\n        });\n        json = response.data;\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      // ajax의 요청 결과를 상태값에 반영한다. -> 함수형 업데이트\n      setDepartment(department => json);\n    })();\n  }, [keyword]);\n\n  // 검색폼에서의 전송이벤트 - 성능 최적화를 위해 useCallback 적용\n  const onSearchSubmit = useCallback(e => {\n    e.preventDefault();\n    console.log('submit!');\n    // 검색어를 QueryString으로 지정하여 페이지로 이동 (여기서 keyword는 form의 name속성으로 불러온 input)\n    navigate(`/department?keyword=${e.currentTarget.keyword.value}`);\n  }, [navigate]);\n\n  // 데이터 추가 submit 이벤트\n  const onDataAddSubmit = useCallback(e => {\n    e.preventDefault();\n\n    // 이벤트가 발생한 폼 자신\n    const form = e.currentTarget;\n\n    // 폼 안의 input태그에 name속성으로 접근하여 입력값 취득\n    const dname = form.dname.value;\n    const loc = form.loc.value;\n    (async () => {\n      setLoading(loading => true);\n      let json = null;\n      try {\n        const response = await axios.post(\"/department/\", {\n          // 입력값을 post 파라미터로 전달\n          dname: dname,\n          loc: loc\n        });\n        json = response.data;\n        console.group('데이터 저장 결과');\n        console.log(json);\n        console.groupEnd();\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      setDepartment(department => department.concat(json));\n      form.reset();\n    })();\n  }, []);\n\n  // 데이터 삭제 버튼 click 이벤트\n  const onDataDeleteClick = useCallback(e => {\n    // 클릭된 자기 자신\n    const current = e.currentTarget;\n    // 클릭된 자신에게 숨어있는 data-id값을 추출\n    const id = parseInt(current.dataset.id);\n    console.log(`삭제 대상의 id값: ${id}`);\n\n    // 삭제 요청을 위한 ajax 처리\n    (async () => {\n      setLoading(loading => true);\n      try {\n        // 삭제의 경우 ajax의 응답결과가 필요없다.\n        await axios.delete(`/department/${id}`);\n      } catch (e) {\n        console.error(e);\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(loading => false);\n      }\n      // ajax 삭제처리가 완료되면 프론트엔드가 가지고 있던 복사본(department 상태값)에서도 동일한 항목을 찾아야한다.\n      setDepartment(department => {\n        const dropId = department.findIndex((v, i) => {\n          return v.id === id;\n        });\n        console.log(`제거할 대상의 배열 인덱스: ${dropId}`);\n\n        // 상태값이 배열이므로 인덱스 번호가 dropId인 위치에서 1개의 데이터 삭제\n        department.splice(dropId, 1);\n\n        // 제거 결과를 리턴\n        return department;\n      });\n    })();\n  }, []);\n\n  // 데이터 수정 버튼 click 이벤트\n  const onDataEditClick = useCallback(e => {\n    e.preventDefault();\n\n    // 수정할 항목에 대한 인덱스 번호를 상태값으로 설정한다.\n    const current = e.currentTarget;\n    const id = parseInt(current.dataset.id);\n    setUpdateId(id);\n  }, []);\n\n  // 데이터 수정사항 저장 버튼 click 이벤트\n  const onDataEditSubmit = useCallback(e => {\n    e.preventDefault();\n\n    // 이벤트가 발생한 form요소 취득\n    const current = e.target;\n\n    // form요소 내의 input 요소들을 name속성값으로 접근하여 입력값을 얻음\n    const id = current.id.value;\n    const dname = current.dname.value;\n    const loc = current.loc.value;\n\n    // 백엔드에 데이터가 수정되었음을 알린다.\n    (async () => {\n      // ajax 로딩 시작을 알림\n      setLoading(true);\n\n      // 수정 결과에 대한 json\n      let json = null;\n\n      // ajax를 통한 데이터 삭제 요청\n      try {\n        const response = await axios.get(`/department/${id}`, {\n          dname: dname,\n          loc: loc\n        });\n        // 수정 결과에 대한 json을 받음\n        json = response.data;\n        console.group('데이터 수정 결과');\n        console.log(json);\n        console.groupEnd();\n      } catch (e) {\n        console.error(e);\n        alert(`데이터  수정에 실패했습니다. \\n${e.message}`);\n        return;\n      } finally {\n        setLoading(false);\n      }\n\n      // 수정 결과로 원본 배열의 원소를 교체한다.\n      setDepartment(department => {\n        // 원본 상태값과 비교하여 수정된 항목의 배열 인덱스를 찾는다.\n        const editId = department.findIndex((v, i) => v.id === json.id);\n        console.log(`제거할 대상의 배열 인덱스: ${editId}`);\n\n        // 상태값이 배열이므로 인덱스 번호가 editId인 위치에서 1개의 데이터를 교체\n        department.splice(editId, 1, json);\n        return department;\n      });\n    })();\n    // 상태변수를 되돌린다.\n    setUpdateId(-1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onDataAddSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dname\",\n          children: \"\\uD559\\uACFC : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"dname\",\n          id: \"dname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loc\",\n          children: \"\\uC704\\uCE58 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"loc\",\n          id: \"loc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: onDataEditSubmit,\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"keyword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uACFC\\uC704\\uCE58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: department.length > 0 ? department.map((item, index) => {\n          // 상태값에 저장되어 있는 수정할 항목의 인덱스에 해당하는 원소라면?\n          if (item.id === updateId) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"id\",\n                defaultValue: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"dname\",\n                  defaultValue: item.dname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"loc\",\n                  defaultValue: item.loc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"\\uC218\\uC815\\uC0AC\\uD56D \\uC800\\uC7A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.dname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.loc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  \"data-id\": item.id,\n                  onClick: onDataEditClick,\n                  children: \"\\uC218\\uC815\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  \"data-id\": item.id,\n                  onClick: onDataDeleteClick,\n                  children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this);\n          }\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            align: \"center\",\n            children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}, \"G3jWoA0CLrUHUY+PJk4HgRI81gU=\", false, function () {\n  return [useLocation, useNavigate];\n})), \"G3jWoA0CLrUHUY+PJk4HgRI81gU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = Department;\nexport default _c3 = /*#__PURE__*/React.memo(Department);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Department$memo\");\n$RefreshReg$(_c2, \"Department\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useEffect","useCallback","axios","Spinner","useLocation","useNavigate","fireEvent","Department","loading","setLoading","department","setDepartment","updateId","setUpdateId","search","query","URLSearchParams","keyword","Object","fromEntries","navigate","json","response","get","params","dname","data","e","console","error","alert","message","onSearchSubmit","preventDefault","log","currentTarget","value","onDataAddSubmit","form","loc","post","group","groupEnd","concat","reset","onDataDeleteClick","current","id","parseInt","dataset","delete","dropId","findIndex","v","i","splice","onDataEditClick","onDataEditSubmit","target","editId","length","map","item","index"],"sources":["C:/Users/cdabo/react/10-simple-ajax/src/pages/Department.js"],"sourcesContent":["import React,{memo,useState,useEffect,useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../components/Spinner';\r\nimport {useLocation,useNavigate} from 'react-router-dom';\r\nimport { fireEvent } from '@testing-library/react';\r\n\r\nconst Department = memo(() => {\r\n  // 현재 ajax가 데이터를 로딩중인지를 의미하는 상태값\r\n  const [loading, setLoading] = useState(false);\r\n  // 화면에 표시할 상태값(ajax 연동 결과로 받아올 json) -> 초기값을 빈 배열로 정의\r\n  const [department, setDepartment] = useState([]);\r\n  // 수정할 항목에 대한 id값을 지정하기 위한 상태값\r\n  const [updateId, setUpdateId] = useState(-1);\r\n\r\n  // QueryString으로 전달되는 검색 키워드를 받는다.\r\n  const {search} = useLocation();\r\n  const query = new URLSearchParams(search);\r\n  const {keyword} = Object.fromEntries(query);\r\n\r\n  // 페이지 강제 이동을 위한 객체 생성\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // // 검색 키워드\r\n  // const [keyword, setKeyword] = useState('');\r\n  // // 삭제할 항목에 대한 id값을 저장하기 위한 상태값\r\n  // const [dropId, setDropId] = useState(-1);\r\n  // // 수정할 항목에 대한 id값을 저장하기 위한 상태값\r\n  // const [updateId, setUpdateId] = useState(-1);\r\n\r\n  // 페이지가 처음 열렸을 때 실행할 hook\r\n  useEffect(() => {\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n      \r\n      let json = null;\r\n      \r\n      try {\r\n        const response = await axios.get(\"/department/\", {\r\n          // 검색어가 있다면 dname값으로 설정, 그렇지 않으면 정의 안함\r\n          params: keyword ? {dname: keyword} : null\r\n        });\r\n        json = response.data;\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n      // ajax의 요청 결과를 상태값에 반영한다. -> 함수형 업데이트\r\n      setDepartment(department => json);\r\n    })();\r\n  },[keyword]);\r\n\r\n  // 검색폼에서의 전송이벤트 - 성능 최적화를 위해 useCallback 적용\r\n  const onSearchSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n    console.log('submit!');\r\n    // 검색어를 QueryString으로 지정하여 페이지로 이동 (여기서 keyword는 form의 name속성으로 불러온 input)\r\n    navigate(`/department?keyword=${e.currentTarget.keyword.value}`)\r\n  },[navigate]);\r\n\r\n  // 데이터 추가 submit 이벤트\r\n  const onDataAddSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 이벤트가 발생한 폼 자신\r\n    const form = e.currentTarget;\r\n    \r\n    // 폼 안의 input태그에 name속성으로 접근하여 입력값 취득\r\n    const dname = form.dname.value;\r\n    const loc = form.loc.value;\r\n\r\n    (async () => {\r\n      setLoading(loading => true);\r\n      let json = null;\r\n\r\n      try {\r\n        const response = await axios.post(\"/department/\", {\r\n          // 입력값을 post 파라미터로 전달\r\n          dname: dname,\r\n          loc: loc\r\n        });\r\n        json = response.data;\r\n\r\n        console.group('데이터 저장 결과');\r\n        console.log(json);\r\n        console.groupEnd();\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n\r\n      setDepartment(department => department.concat(json));\r\n      form.reset();\r\n    })();\r\n  },[]);\r\n\r\n  // 데이터 삭제 버튼 click 이벤트\r\n  const onDataDeleteClick = useCallback(e => {\r\n    // 클릭된 자기 자신\r\n    const current = e.currentTarget;\r\n    // 클릭된 자신에게 숨어있는 data-id값을 추출\r\n    const id = parseInt(current.dataset.id);\r\n    console.log(`삭제 대상의 id값: ${id}`);\r\n\r\n    // 삭제 요청을 위한 ajax 처리\r\n    (async () => {\r\n      setLoading(loading => true);\r\n\r\n      try {\r\n        // 삭제의 경우 ajax의 응답결과가 필요없다.\r\n        await axios.delete(`/department/${id}`);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터 요청에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(loading => false);\r\n      }\r\n      // ajax 삭제처리가 완료되면 프론트엔드가 가지고 있던 복사본(department 상태값)에서도 동일한 항목을 찾아야한다.\r\n      setDepartment(department => {\r\n        const dropId = department.findIndex((v,i) => {\r\n          return v.id === id;\r\n        });\r\n        console.log(`제거할 대상의 배열 인덱스: ${dropId}`);\r\n        \r\n        // 상태값이 배열이므로 인덱스 번호가 dropId인 위치에서 1개의 데이터 삭제\r\n        department.splice(dropId,1);\r\n\r\n        // 제거 결과를 리턴\r\n        return department;\r\n      });\r\n    })();\r\n    \r\n  },[]);\r\n\r\n  // 데이터 수정 버튼 click 이벤트\r\n  const onDataEditClick = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 수정할 항목에 대한 인덱스 번호를 상태값으로 설정한다.\r\n    const current = e.currentTarget;\r\n    const id = parseInt(current.dataset.id);\r\n    setUpdateId(id);\r\n  },[]);\r\n  \r\n\r\n  // 데이터 수정사항 저장 버튼 click 이벤트\r\n  const onDataEditSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n\r\n    // 이벤트가 발생한 form요소 취득\r\n    const current = e.target;\r\n\r\n    // form요소 내의 input 요소들을 name속성값으로 접근하여 입력값을 얻음\r\n    const id = current.id.value;\r\n    const dname = current.dname.value;\r\n    const loc = current.loc.value;\r\n\r\n    // 백엔드에 데이터가 수정되었음을 알린다.\r\n    (async () => {\r\n      // ajax 로딩 시작을 알림\r\n      setLoading(true);\r\n\r\n      // 수정 결과에 대한 json\r\n      let json = null;\r\n      \r\n      // ajax를 통한 데이터 삭제 요청\r\n      try {\r\n        const response = await axios.get(`/department/${id}`, {\r\n          dname: dname,\r\n          loc: loc\r\n        });\r\n        // 수정 결과에 대한 json을 받음\r\n        json = response.data;\r\n        console.group('데이터 수정 결과');\r\n        console.log(json);\r\n        console.groupEnd();\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert(`데이터  수정에 실패했습니다. \\n${e.message}`);\r\n        return;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n\r\n      // 수정 결과로 원본 배열의 원소를 교체한다.\r\n      setDepartment(department => {\r\n        // 원본 상태값과 비교하여 수정된 항목의 배열 인덱스를 찾는다.\r\n        const editId = department.findIndex((v,i) => v.id === json.id);\r\n        console.log(`제거할 대상의 배열 인덱스: ${editId}`);\r\n\r\n        // 상태값이 배열이므로 인덱스 번호가 editId인 위치에서 1개의 데이터를 교체\r\n        department.splice(editId,1,json);\r\n        return department;\r\n      });\r\n    })();\r\n    // 상태변수를 되돌린다.\r\n    setUpdateId(-1);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <Spinner loading={loading} />\r\n      {/* 입력폼 */}\r\n      <form onSubmit={onDataAddSubmit}>\r\n        <div>\r\n          <label htmlFor='dname'>학과 : </label>\r\n          <input type='text' name='dname' id='dname' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='loc'>위치 : </label>\r\n          <input type='text' name='loc' id='loc' />\r\n        </div>\r\n        <button type='submit' onClick={onDataEditSubmit}>저장하기</button>\r\n      </form>\r\n\r\n      {/* 검색폼 */}\r\n      <form onSubmit={onSearchSubmit}>\r\n        <input type='text' name='keyword' />\r\n        <button type='submit'>검색</button>\r\n      </form>\r\n\r\n      <hr />\r\n\r\n      <table border='1'>\r\n        <thead>\r\n          <tr>\r\n            <th>학과번호</th>\r\n            <th>학과명</th>\r\n            <th>학과위치</th>\r\n            <th>수정</th>\r\n            <th>삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {department.length > 0 ? (\r\n            department.map((item,index) => {\r\n              // 상태값에 저장되어 있는 수정할 항목의 인덱스에 해당하는 원소라면?\r\n              if (item.id === updateId) {\r\n                return (\r\n                  <tr key={item.id}>\r\n                    {/* 수정을 위한 input요소를 표시 */}\r\n                    <input type='hidden' name='id' defaultValue={item.id} />\r\n                    <td>{item.id}</td>\r\n                    <td><input type='text' name='dname' defaultValue={item.dname} /></td>\r\n                    <td><input type='text' name='loc' defaultValue={item.loc} /></td>\r\n                    <td colSpan='2'>\r\n                      <button type='submit'>수정사항 저장</button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              } else {\r\n                return (\r\n                  <tr key={item.id}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.dname}</td>\r\n                    <td>{item.loc}</td>\r\n                    <td>\r\n                      <button type='button' data-id={item.id} onClick={onDataEditClick}>수정하기</button>\r\n                    </td>\r\n                    <td>\r\n                      <button type='button' data-id={item.id} onClick={onDataDeleteClick}>삭제하기</button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='5' align='center'>\r\n                검색 결과가 없습니다.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default React.memo(Department);"],"mappings":"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"},"metadata":{},"sourceType":"module"}